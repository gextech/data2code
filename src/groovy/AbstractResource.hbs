package {{extra.package}}
{{#classMethods.responses}}
import  {{../extra.dtoPackage}}.{{type}}DTO{{/classMethods.responses}}

public abstract class {{className}} {

  def responseHandlers = [:]
  {{className}}(){
    {{#classMethods.responses}}responseHandlers.put({{../className}}.Status.{{methodName}}_{{statusCode}}, {data-> new {{type}}DTO(data)})
    {{/classMethods.responses}}
  }

  public enum Status{
    {{#classMethods.responses}}
    {{methodName}}_{{statusCode}}({{statusCode}}),{{/classMethods.responses}}
    private final int code;
    Status(final int statusCode){
      this.code = statusCode
    }
  }

  def handleResponse({{className}}.Status status, data){
    responseHandlers.get(status)(data)
  }

{{#classMethods.methods}}
  abstract {{methodName}}(){{/classMethods.methods}}

}

